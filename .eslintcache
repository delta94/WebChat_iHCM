[{"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Reducers\\CurrentUser.reducer.ts":"1","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\ContextChat\\ImageChat\\Models\\ImageChat.ts":"2","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\Popup\\DetailPopup\\Views\\DetailPopupScreen.tsx":"3","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\DataNotFound\\Views\\DataNotFoundScreen.tsx":"4","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\Main\\Views\\UserChatListScreen.tsx":"5","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfNotFoundIcon.ts":"6","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\Header\\Views\\HeaderUserChatListScreen.tsx":"7","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Main\\Views\\ChatDetailScreen.tsx":"8","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\ImageOverlayFullScreen\\Views\\ImageOverlayScreen.tsx":"9","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\IconCirclePanel\\Views\\IconCirclePanelScreen.tsx":"10","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\ConversationDetail\\Main\\Views\\ConversationDetailScreen.tsx":"11","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\CustomButton\\Views\\CustomButtonScreen.tsx":"12","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\ContextChat\\GroupNotiChat\\Views\\GroupNotiChatScreen.tsx":"13","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Personal\\Conversation\\Views\\PersonalConversationScreen.tsx":"14","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\ToggleSwitch\\Views\\ToggleSwitchScreen.tsx":"15","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\App.tsx":"16","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\IconImage\\Views\\IconImageScreen.tsx":"17","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Actions\\CurrentUser.action.ts":"18","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Header\\Views\\HeaderNotificationListScreen.tsx":"19","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Main\\Views\\NotificationListScreen.tsx":"20","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\UserChat\\Views\\UserChatScreen.tsx":"21","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Noti\\Views\\NotificationScreen.tsx":"22","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\CircleAvatar\\Views\\CircleAvatarScreen.tsx":"23","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfGroupNotiChat.ts":"24","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfNotification.ts":"25","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Noti\\Models\\Notification.ts":"26","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\index.tsx":"27","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\Navbar\\Main\\Views\\NavbarScreen.tsx":"28","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\Main\\Views\\NavDetailScreen.tsx":"29","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\sampledatabase\\Group.database.ts":"30","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Personal\\Detail\\Views\\PersonalDetailScreen.tsx":"31","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\Main\\Views\\ChatListScreen.tsx":"32","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfMessage.ts":"33","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\FriendList\\Main\\Views\\FriendListScreen.tsx":"34","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\FriendList\\Friend\\Views\\FriendScreen.tsx":"35"},{"size":714,"mtime":1610072974204,"results":"36","hashOfConfig":"37"},{"size":258,"mtime":1610072974159,"results":"38","hashOfConfig":"37"},{"size":2051,"mtime":1610501418973,"results":"39","hashOfConfig":"37"},{"size":1326,"mtime":1610506185564,"results":"40","hashOfConfig":"37"},{"size":6896,"mtime":1610526893346,"results":"41","hashOfConfig":"37"},{"size":100,"mtime":1610502552056,"results":"42","hashOfConfig":"37"},{"size":812,"mtime":1610447581244,"results":"43","hashOfConfig":"37"},{"size":1852,"mtime":1610502776523,"results":"44","hashOfConfig":"37"},{"size":5554,"mtime":1610072974191,"results":"45","hashOfConfig":"37"},{"size":596,"mtime":1610072974188,"results":"46","hashOfConfig":"37"},{"size":754,"mtime":1610072974169,"results":"47","hashOfConfig":"37"},{"size":382,"mtime":1610072974186,"results":"48","hashOfConfig":"37"},{"size":1981,"mtime":1610362292754,"results":"49","hashOfConfig":"37"},{"size":17120,"mtime":1610503043235,"results":"50","hashOfConfig":"37"},{"size":335,"mtime":1610072974195,"results":"51","hashOfConfig":"37"},{"size":571,"mtime":1610440620627,"results":"52","hashOfConfig":"37"},{"size":390,"mtime":1610072974189,"results":"53","hashOfConfig":"37"},{"size":229,"mtime":1610072974202,"results":"54","hashOfConfig":"37"},{"size":2752,"mtime":1610503907891,"results":"55","hashOfConfig":"37"},{"size":2476,"mtime":1610522782426,"results":"56","hashOfConfig":"37"},{"size":2888,"mtime":1610508769615,"results":"57","hashOfConfig":"37"},{"size":3479,"mtime":1610525533466,"results":"58","hashOfConfig":"37"},{"size":1181,"mtime":1610509137052,"results":"59","hashOfConfig":"37"},{"size":108,"mtime":1610511624029,"results":"60","hashOfConfig":"37"},{"size":99,"mtime":1610511995811,"results":"61","hashOfConfig":"37"},{"size":759,"mtime":1610522136110,"results":"62","hashOfConfig":"37"},{"size":281,"mtime":1610072974182,"results":"63","hashOfConfig":"37"},{"size":2663,"mtime":1610447925134,"results":"64","hashOfConfig":"37"},{"size":942,"mtime":1610525758182,"results":"65","hashOfConfig":"37"},{"size":790,"mtime":1610072974206,"results":"66","hashOfConfig":"37"},{"size":9646,"mtime":1610072974176,"results":"67","hashOfConfig":"37"},{"size":8545,"mtime":1610436364246,"results":"68","hashOfConfig":"37"},{"size":92,"mtime":1610072974183,"results":"69","hashOfConfig":"37"},{"size":7548,"mtime":1610529891431,"results":"70","hashOfConfig":"37"},{"size":1700,"mtime":1610527458595,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1un77o0",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Reducers\\CurrentUser.reducer.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\ContextChat\\ImageChat\\Models\\ImageChat.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\Popup\\DetailPopup\\Views\\DetailPopupScreen.tsx",["147"],"import React from 'react';\r\nimport { ENUM_KIND_OF_MESSAGE } from '../../../../Constants/KindOfMessage';\r\nimport IconImageScreen from '../../../IconImage/Views/IconImageScreen';\r\nimport ModalScreen from '../../../Modal/Views/ModalScreen';\r\nimport './DetailPopupScreen.css';\r\n\r\nfunction DetailPopupScreen(props : any){\r\n    const { listEles , eleHeader } = props;\r\n    const showDetailPopup = () =>{\r\n        return listEles.map((ele:any , index:number) =>{\r\n            if(ele.eleContext){\r\n\r\n                return  <ModalScreen headerContent={ \"Cài đặt thông báo\" } context={ ele.eleContext } hasPadding={ true }>\r\n                            <li onClick={ ele.onClick }>\r\n                                <IconImageScreen src={ ele.icon } alt=\"replay\" class={\"\"}></IconImageScreen>\r\n                                <span className=\"app-mainfont\">\r\n                                    { ele.text }\r\n                                </span>           \r\n                            </li>\r\n                        </ModalScreen>\r\n            }\r\n            return (\r\n                <li onClick={ ele.onClick }>\r\n                    <IconImageScreen src={ ele.icon } alt=\"replay\" class={\"\"}></IconImageScreen>\r\n                    <span className=\"app-mainfont\">\r\n                        { ele.text }\r\n                    </span>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"detailpopup-container\">\r\n            {\r\n                eleHeader && eleHeader\r\n            }\r\n            <ul className=\"detailpopup-detail\">\r\n                {\r\n                    showDetailPopup()\r\n                }\r\n            </ul>\r\n\r\n                  {/* <ModalScreen headerContent={ \"Cài đặt thông báo\" } context={ eleContext } hasPadding={ true }>\r\n            <div>\r\n              <IconPanelScreen isActive={false} srcImg={ iconwhitenoti } contextToolTip={\"Thông báo\"}></IconPanelScreen>\r\n            </div>\r\n          </ModalScreen> */}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default DetailPopupScreen;",["148","149"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\DataNotFound\\Views\\DataNotFoundScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\Main\\Views\\UserChatListScreen.tsx",["150","151"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfNotFoundIcon.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\Header\\Views\\HeaderUserChatListScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Main\\Views\\ChatDetailScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\ImageOverlayFullScreen\\Views\\ImageOverlayScreen.tsx",["152"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\IconCirclePanel\\Views\\IconCirclePanelScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\ConversationDetail\\Main\\Views\\ConversationDetailScreen.tsx",["153"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\CustomButton\\Views\\CustomButtonScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\ContextChat\\GroupNotiChat\\Views\\GroupNotiChatScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Personal\\Conversation\\Views\\PersonalConversationScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\ToggleSwitch\\Views\\ToggleSwitchScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\App.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\IconImage\\Views\\IconImageScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Actions\\CurrentUser.action.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Header\\Views\\HeaderNotificationListScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Main\\Views\\NotificationListScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\UserChat\\Views\\UserChatScreen.tsx",["154"],"import React from \"react\";\r\nimport \"./UserChatScreen.css\";\r\nimport CircleAvatarScreen from \"../../../../../libraries/Features/CircleAvatar/Views/CircleAvatarScreen\";\r\nimport { IConversationState } from \"../../../../../redux/Reducers/ConversationList.reducer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CustomBadgeScreen from \"../../../../../libraries/Features/CustomBadge/Views/CustomBadgeScreen\";\r\nimport { useWindowSize } from \"../../../../../libraries/Hooks/useWindowSize\";\r\n\r\nconst iconunread = require(\"./Icons/iconunread.svg\").default;\r\n\r\nfunction UserChatScreen(props: IConversationState) {\r\n  const history = useHistory();\r\n  const [width, height] = useWindowSize();\r\n\r\n  const redirectToChatDetail = () => {\r\n    let kind = \"personal\";\r\n    if (props.isGroup) {\r\n      kind = \"group\";\r\n    }\r\n    history.push(`/${kind}/${props.id}`);\r\n\r\n    props.setIsActive(props.isGroup, props.id);\r\n  };\r\n\r\n  const renderUserImage = () => {\r\n    let widthAva=\"48px\";\r\n    let heightAva=\"48px\";\r\n    if (width < 768) {\r\n      widthAva=\"40px\";\r\n      heightAva=\"40px\";\r\n    }\r\n    return (\r\n      <CircleAvatarScreen\r\n        class=\"\"\r\n        width={ widthAva }\r\n        height={ heightAva }\r\n        src={props.avatar}\r\n        alt=\"avatar\"\r\n        isOnline={props.isOnline}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.isActive\r\n          ? \"userchat-container userchat-container-active\"\r\n          : \"userchat-container\"\r\n      }\r\n      onClick={redirectToChatDetail}\r\n    >\r\n      <div className=\"userchat-image\">\r\n        {\r\n          renderUserImage()\r\n        }\r\n      </div>\r\n      <div className=\"userchat-context\">\r\n        <div className=\"userchat-context-top\">\r\n          <span\r\n            className={\r\n              props.hasReadLastMess\r\n                ? \"userchat-username app-mainfont\"\r\n                : \"userchat-username app-mainfont userchat-unreadcontext\"\r\n            }\r\n          >\r\n            {props.name}\r\n          </span>\r\n          {props.isGroup && (\r\n            <CustomBadgeScreen\r\n              text=\"Nhóm\"\r\n              class=\"userchat-groupchat\"\r\n            ></CustomBadgeScreen>\r\n          )}\r\n          <span className=\"userchat-timeoflastmess app-mainfont\">\r\n            {props.timeToReadLastMess}\r\n          </span>\r\n        </div>\r\n        {props.hasReadLastMess ? (\r\n          <div className=\"userchat-context-bottom\">\r\n            <h3 className=\"userchat-contextoflastmess\">{ props.lastMess }</h3>\r\n          </div>\r\n        ) : (\r\n          <div className=\"userchat-context-bottom\">\r\n            <h3 className=\"userchat-contextoflastmess userchat-unreadcontext\">\r\n              {props.lastMess}\r\n            </h3>\r\n            <img src={iconunread} className=\"userchat-icon-unread\" alt=\"\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserChatScreen;\r\n","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Noti\\Views\\NotificationScreen.tsx",["155"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\CircleAvatar\\Views\\CircleAvatarScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfGroupNotiChat.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfNotification.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Noti\\Models\\Notification.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\index.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\Navbar\\Main\\Views\\NavbarScreen.tsx",["156","157","158","159"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\Main\\Views\\NavDetailScreen.tsx",["160"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\sampledatabase\\Group.database.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Personal\\Detail\\Views\\PersonalDetailScreen.tsx",["161"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\Main\\Views\\ChatListScreen.tsx",["162","163","164","165"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfMessage.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\FriendList\\Main\\Views\\FriendListScreen.tsx",["166"],"import React, { ChangeEvent, useEffect, useRef, useState } from 'react';\r\nimport { ENUM_KIND_OF_NOTFOUNDICON } from '../../../../../libraries/Constants/KindOfNotFoundIcon';\r\nimport CustomInputScreen from '../../../../../libraries/Features/CustomInput/Views/CustomInputScreen';\r\nimport DataNotFoundScreen from '../../../../../libraries/Features/DataNotFound/Views/DataNotFoundScreen';\r\nimport { IFriend } from '../../Friend/Models/Friend';\r\nimport FriendScreen from '../../Friend/Views/FriendScreen';\r\n\r\nimport './FriendListScreen.css';\r\n\r\n\r\nconst iconsearch = require(\"../../../../../libraries/Icons/iconsearch.svg\").default;\r\n\r\nconst styleCustomInput = {\r\n  backgroundImage: `url('${iconsearch}')`,\r\n  backgroundPosition: \"3% 50%\",\r\n  padding: \"12px 20px 12px 40px\",\r\n  borderRadius: \"0.7rem\",\r\n  fontSize: \"1rem\",\r\n};\r\n\r\n\r\nconst friendList: IFriend[] = [\r\n    {\r\n        id:1,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:2,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:3,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:4,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:5,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:6,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:7,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:8,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:9,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:10,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy 123\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:11,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy 345\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:12,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy 777\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:13,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:14,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:15,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:16,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:17,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:18,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:19,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy 123\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:20,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy 333\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:21,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy 789\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n    {\r\n        id:22,\r\n        avatar:\"https://www.w3schools.com/w3images/avatar2.png\",\r\n        name:\"Quang Huy 111\",\r\n        isOnline:true,\r\n        context:\"iSoft\"\r\n    },\r\n];\r\n\r\nfunction timeout(ms: any) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nconst getFriends = async (page: number) =>{\r\n\r\n    let result:any[] = [];\r\n    \r\n    let length = friendList.length;\r\n    if(page * 10 < length){\r\n        length = page * 10\r\n    }\r\n    for (let index = (page - 1)* 10; index < length; index++) {\r\n        await result.push(friendList[index]);\r\n    }\r\n    await timeout(1e3);\r\n    return result;\r\n}\r\n\r\nfunction FriendListScreen(props: any) {\r\n    const [query , setQuery] = useState<string>(\"\");\r\n    const [page, setPage] = useState<number>(1);\r\n    const [friends, setFriends] = useState<IFriend[]>([]);\r\n    const typingTimeoutRef = useRef<any>(null);\r\n\r\n    useEffect(() => {\r\n        const loadUsers = async () => {\r\n          const newFriends = await getFriends(page);\r\n          setFriends((prev) => [...prev, ...newFriends]);\r\n        };\r\n    \r\n        loadUsers();\r\n    }, [page]);\r\n    \r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) =>{\r\n        if(typingTimeoutRef.current){\r\n          clearTimeout(typingTimeoutRef.current);\r\n        }\r\n    \r\n        typingTimeoutRef.current = setTimeout(() =>{\r\n          setQuery(e.target.value);\r\n        },5e2);\r\n    }\r\n\r\n    const handleScroll = (event: any) => {\r\n        const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\r\n    \r\n        if (scrollHeight - scrollTop <= (clientHeight + 2)) {\r\n          setPage(prev => prev + 1);\r\n        }\r\n      };\r\n\r\n    const showFriendList = () =>{\r\n        if (friends.length === 0) {\r\n            return <DataNotFoundScreen text={\"Không tìm thấy kết quả\"} icon={ ENUM_KIND_OF_NOTFOUNDICON.DATA } isPosition={ true }></DataNotFoundScreen>;\r\n          }\r\n          return friends.map(\r\n            (friend: IFriend, idx: number) => (\r\n                <FriendScreen\r\n                key={ idx }\r\n                {...friend}\r\n                ></FriendScreen>\r\n            )\r\n          );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"userchatlist-top\">\r\n                <div className=\"userchatlist-header-container\">\r\n                    <h4 className=\"app-mainfont\">Thành viên</h4>          \r\n                </div>\r\n\r\n                <CustomInputScreen\r\n                style={styleCustomInput}\r\n                class=\"searchinput-container\"\r\n                placeHolder=\"Nhập thành viên cần tìm kiếm\"\r\n                isMultiline={false}\r\n                isTextArea={ true }\r\n                onChange={ onChange }\r\n                hasClearText={ true }\r\n                ></CustomInputScreen>\r\n            </div>\r\n\r\n            <div className=\"userchatlist-bottom\" onScroll={ handleScroll }>\r\n                {\r\n                    showFriendList()\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default FriendListScreen;\r\n\r\n\r\n","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\FriendList\\Friend\\Views\\FriendScreen.tsx",["167"],"import React from \"react\";\r\nimport \"./FriendScreen.css\";\r\nimport CircleAvatarScreen from \"../../../../../libraries/Features/CircleAvatar/Views/CircleAvatarScreen\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useWindowSize } from \"../../../../../libraries/Hooks/useWindowSize\";\r\nimport { IFriend } from \"../Models/Friend\";\r\n\r\nfunction FriendScreen(props: IFriend) {\r\n  const history = useHistory();\r\n  const [width, height] = useWindowSize();\r\n\r\n  const redirectToChatDetail = () => {\r\n    let kind = \"personal\";\r\n    \r\n    history.push(`/${kind}/${props.id}`);\r\n  };\r\n\r\n  const renderUserImage = () => {\r\n    let widthAva=\"48px\";\r\n    let heightAva=\"48px\";\r\n    if (width < 768) {\r\n      widthAva=\"40px\";\r\n      heightAva=\"40px\";\r\n    }\r\n    return (\r\n      <CircleAvatarScreen\r\n        class=\"\"\r\n        width={ widthAva }\r\n        height={ heightAva }\r\n        src={props.avatar}\r\n        alt=\"avatar\"\r\n        isOnline={props.isOnline}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\"userchat-container\" }\r\n      onClick={redirectToChatDetail}\r\n    >\r\n      <div className=\"userchat-image\">\r\n        {\r\n          renderUserImage()\r\n        }\r\n      </div>\r\n      <div className=\"userchat-context\">\r\n        <div className=\"userchat-context-top\">\r\n          <span\r\n            className={ \"userchat-username app-mainfont userchat-unreadcontext\" }\r\n          >\r\n            {props.name}\r\n          </span>\r\n        </div>\r\n        <div className=\"userchat-context-bottom\">\r\n            <h3 className=\"userchat-contextoflastmess\">\r\n              {props.context}\r\n            </h3>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendScreen;\r\n",{"ruleId":"168","severity":1,"message":"169","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":30},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"168","severity":1,"message":"176","line":82,"column":10,"nodeType":"170","messageId":"171","endLine":82,"endColumn":15},{"ruleId":"177","severity":1,"message":"178","line":94,"column":5,"nodeType":"179","endLine":94,"endColumn":7,"suggestions":"180"},{"ruleId":"177","severity":1,"message":"181","line":38,"column":7,"nodeType":"179","endLine":38,"endColumn":9,"suggestions":"182"},{"ruleId":"168","severity":1,"message":"183","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":19},{"ruleId":"168","severity":1,"message":"184","line":13,"column":17,"nodeType":"170","messageId":"171","endLine":13,"endColumn":23},{"ruleId":"168","severity":1,"message":"184","line":15,"column":19,"nodeType":"170","messageId":"171","endLine":15,"endColumn":25},{"ruleId":"168","severity":1,"message":"185","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"186","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":19},{"ruleId":"168","severity":1,"message":"187","line":4,"column":8,"nodeType":"170","messageId":"171","endLine":4,"endColumn":26},{"ruleId":"168","severity":1,"message":"188","line":11,"column":7,"nodeType":"170","messageId":"171","endLine":11,"endColumn":20},{"ruleId":null,"fatal":true,"severity":2,"message":"189","line":17,"column":33},{"ruleId":"168","severity":1,"message":"183","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":19},{"ruleId":"168","severity":1,"message":"190","line":13,"column":8,"nodeType":"170","messageId":"171","endLine":13,"endColumn":26},{"ruleId":"168","severity":1,"message":"191","line":17,"column":20,"nodeType":"170","messageId":"171","endLine":17,"endColumn":29},{"ruleId":"168","severity":1,"message":"192","line":22,"column":12,"nodeType":"170","messageId":"171","endLine":22,"endColumn":17},{"ruleId":"177","severity":1,"message":"193","line":36,"column":10,"nodeType":"179","endLine":36,"endColumn":19,"suggestions":"194"},{"ruleId":"168","severity":1,"message":"176","line":199,"column":12,"nodeType":"170","messageId":"171","endLine":199,"endColumn":17},{"ruleId":"168","severity":1,"message":"184","line":10,"column":17,"nodeType":"170","messageId":"171","endLine":10,"endColumn":23},"@typescript-eslint/no-unused-vars","'ENUM_KIND_OF_MESSAGE' is defined but never used.","Identifier","unusedVar","no-native-reassign",["195"],"no-negated-in-lhs",["196"],"'query' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props' and 'setUserChatIsAcTiveByPath'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["197"],"React Hook useEffect has a missing dependency: 'mainMiniImage.index'. Either include it or remove the dependency array.",["198"],"'useParams' is defined but never used.","'height' is assigned a value but never used.","'useState' is defined but never used.","'ModalScreen' is defined but never used.","'ToggleSwitchScreen' is defined but never used.","'iconbrownnoti' is assigned a value but never used.","Parsing error: Identifier expected.","'DataNotFoundScreen' is defined but never used.","'setUserid' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.messageList'. Either include it or remove the dependency array.",["199"],"no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [props, setUserChatIsAcTiveByPath]",{"range":"206","text":"207"},"Update the dependencies array to be: [mainMiniImage.index]",{"range":"208","text":"209"},"Update the dependencies array to be: [pageNum, props.messageList]",{"range":"210","text":"211"},[3877,3879],"[props, setUserChatIsAcTiveByPath]",[1352,1354],"[mainMiniImage.index]",[1903,1912],"[pageNum, props.messageList]"]