[{"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\index.tsx":"1","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\App.tsx":"2","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\containers\\Header\\Views\\HeaderScreen.tsx":"3","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\containers\\Body\\Views\\BodyScreen.tsx":"4","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\Navbar\\Main\\Views\\NavbarScreen.tsx":"5","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\Navbar\\IconPanel\\Views\\IconPanelScreen.tsx":"6","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\UserChatList\\Main\\Views\\UserChatListScreen.tsx":"7","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\UserChatList\\UserChat\\Views\\UserChatScreen.tsx":"8","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\UserChatList\\Header\\Views\\HeaderScreen.tsx":"9","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\UserChatList\\UserChat\\Models\\UserChatModel.ts":"10","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\NoChat\\Views\\NoChatScreen.tsx":"11","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\Main\\Views\\ChatDetailScreen.tsx":"12","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\Main\\Models\\ChatDetailModel.ts":"13","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\UserChatList\\NoUserChatFound\\Views\\NoUserChatFound.tsx":"14","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\Conversion\\Main\\Views\\ConversionScreen.tsx":"15","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\Conversion\\Header\\Views\\HeaderConversionScreen.tsx":"16","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\libraries\\Features\\CircleAvatar\\Views\\CircleAvatarScreen.tsx":"17","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\Conversion\\ChatInput\\Views\\ChatInputScreen.tsx":"18","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\libraries\\Features\\CustomInput\\Views\\CustomInputScreen.tsx":"19","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\libraries\\Features\\IconImage\\Views\\IconImageScreen.tsx":"20","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\Conversion\\ChatList\\Main\\Views\\ChatListScreen.tsx":"21","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\Conversion\\ChatList\\CurrentChat\\Views\\CurrentChatScreen.tsx":"22","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\Conversion\\ChatList\\GuessChat\\Views\\GuessChatScreen.tsx":"23","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\libraries\\Features\\LoadingSpinner\\Views\\LoadingSpinnerScreen.tsx":"24","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\libraries\\Features\\Popup\\Views\\PopupScreen.tsx":"25"},{"size":197,"mtime":1606722011254,"results":"26","hashOfConfig":"27"},{"size":1120,"mtime":1607425061773,"results":"28","hashOfConfig":"27"},{"size":1062,"mtime":1607419280369,"results":"29","hashOfConfig":"27"},{"size":844,"mtime":1607414929564,"results":"30","hashOfConfig":"27"},{"size":911,"mtime":1607403070898,"results":"31","hashOfConfig":"27"},{"size":597,"mtime":1607402966545,"results":"32","hashOfConfig":"27"},{"size":8936,"mtime":1607076200806,"results":"33","hashOfConfig":"27"},{"size":1929,"mtime":1607417368770,"results":"34","hashOfConfig":"27"},{"size":406,"mtime":1607416994213,"results":"35","hashOfConfig":"27"},{"size":204,"mtime":1606807058340,"results":"36","hashOfConfig":"27"},{"size":399,"mtime":1606896805670,"results":"37","hashOfConfig":"27"},{"size":555,"mtime":1606895614022,"results":"38","hashOfConfig":"27"},{"size":59,"mtime":1606816847614,"results":"39","hashOfConfig":"27"},{"size":434,"mtime":1606884261443,"results":"40","hashOfConfig":"27"},{"size":8050,"mtime":1607416445841,"results":"41","hashOfConfig":"27"},{"size":1581,"mtime":1607416898680,"results":"42","hashOfConfig":"27"},{"size":778,"mtime":1607420445186,"results":"43","hashOfConfig":"27"},{"size":1094,"mtime":1607333030778,"results":"44","hashOfConfig":"27"},{"size":389,"mtime":1607075713635,"results":"45","hashOfConfig":"27"},{"size":379,"mtime":1607390802488,"results":"46","hashOfConfig":"27"},{"size":2313,"mtime":1607426104790,"results":"47","hashOfConfig":"27"},{"size":542,"mtime":1607417828738,"results":"48","hashOfConfig":"27"},{"size":1530,"mtime":1607418020447,"results":"49","hashOfConfig":"27"},{"size":212,"mtime":1607334189735,"results":"50","hashOfConfig":"27"},{"size":1205,"mtime":1607421491176,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1b7wq5l",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\index.tsx",[],["111","112"],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\App.tsx",[],["113","114"],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\containers\\Header\\Views\\HeaderScreen.tsx",[],["115","116"],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\containers\\Body\\Views\\BodyScreen.tsx",[],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\Navbar\\Main\\Views\\NavbarScreen.tsx",[],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\Navbar\\IconPanel\\Views\\IconPanelScreen.tsx",[],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\UserChatList\\Main\\Views\\UserChatListScreen.tsx",[],["117","118"],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\UserChatList\\UserChat\\Views\\UserChatScreen.tsx",["119"],"import React from 'react';\r\nimport './UserChatScreen.css';\r\nimport { IUserChat } from '../Models/UserChatModel';\r\nimport CircleAvatarScreen from '../../../../libraries/Features/CircleAvatar/Views/CircleAvatarScreen';\r\n\r\n// const iconuseronline = require('./Icons/iconuseronline.svg').default;\r\nconst iconunread = require('./Icons/iconunread.svg').default;\r\n\r\nfunction UserChatScreen(props : IUserChat) {\r\n  return (\r\n    <div className={ props.isActive ? \"userchat-container userchat-container-active\" : \"userchat-container\"}>\r\n      <div className=\"userchat-image\">\r\n        <CircleAvatarScreen \r\n          class=\"\"\r\n          width=\"48px\"\r\n          height=\"48px\"\r\n          src={ props.avatar }\r\n          alt=\"avatar\"\r\n          isOnline={ props.isOnline }\r\n        ></CircleAvatarScreen>\r\n      </div>\r\n      <div className=\"userchat-context\">\r\n        <div className=\"userchat-context-top\">\r\n          <span className={ props.hasRead ? \"userchat-username app-mainfont\" : \"userchat-username app-mainfont userchat-unreadcontext\" }>\r\n            { props.name }\r\n          </span>\r\n          { props.isGroup && (<span className=\"userchat-groupchat app-mainfont\">Nh√≥m</span>) }    \r\n          <span className=\"userchat-timeoflastmess app-mainfont\">\r\n            { props.timeOfLastMess }\r\n          </span>\r\n        </div>\r\n        {\r\n          props.hasRead ? \r\n          (\r\n            <div className=\"userchat-context-bottom\"> \r\n              <h3 className=\"userchat-contextoflastmess\">{ props.contextOfLastMess }</h3> \r\n            </div>\r\n          ) : \r\n          (\r\n            <div className=\"userchat-context-bottom\"> \r\n            <h3 className=\"userchat-contextoflastmess userchat-unreadcontext\">{ props.contextOfLastMess }</h3> \r\n            <img src={ iconunread } className=\"userchat-icon-unread\" />\r\n          </div>\r\n          )\r\n        }\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserChatScreen;\r\n","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\UserChatList\\Header\\Views\\HeaderScreen.tsx",[],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\UserChatList\\UserChat\\Models\\UserChatModel.ts",[],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\NoChat\\Views\\NoChatScreen.tsx",[],["120","121"],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\Main\\Views\\ChatDetailScreen.tsx",[],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\Main\\Models\\ChatDetailModel.ts",[],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\UserChatList\\NoUserChatFound\\Views\\NoUserChatFound.tsx",[],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\Conversion\\Main\\Views\\ConversionScreen.tsx",[],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\Conversion\\Header\\Views\\HeaderConversionScreen.tsx",[],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\libraries\\Features\\CircleAvatar\\Views\\CircleAvatarScreen.tsx",["122","123"],"import React, { useRef } from 'react';\r\nimport './CircleAvatarScreen.css';\r\nimport { ICircleAvatar } from '../Models/CircleAvatar';\r\nimport { url } from 'inspector';\r\n\r\nconst iconuseronline = require('./Icons/iconuseronline.svg').default;\r\n\r\nfunction CircleAvatarScreen(props : ICircleAvatar) {\r\n  const eleRef = useRef(null);\r\n  return (\r\n        <>\r\n      <div \r\n      className={\"circleavatar-container \" + props.class} \r\n      style={{ backgroundImage : `url(${props.src})` , width: props.width , height: props.height}}\r\n      onClick={ () =>{ props.onClick(eleRef) } }\r\n      ref={ eleRef }\r\n      >\r\n        { props.isOnline && <img className=\"circleavatar-online\" src={ iconuseronline } /> }\r\n      </div>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default CircleAvatarScreen;\r\n","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\Conversion\\ChatInput\\Views\\ChatInputScreen.tsx",[],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\libraries\\Features\\CustomInput\\Views\\CustomInputScreen.tsx",[],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\libraries\\Features\\IconImage\\Views\\IconImageScreen.tsx",[],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\Conversion\\ChatList\\Main\\Views\\ChatListScreen.tsx",["124","125"],"import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport CurrentChatScreen from '../../CurrentChat/Views/CurrentChatScreen';\r\nimport GuessChatScreen from '../../GuessChat/Views/GuessChatScreen';\r\nimport { IMessage, IUser } from '../Models/ChatList';\r\nimport LoadingSpinnerScreen from '../../../../../../libraries/Features/LoadingSpinner/Views/LoadingSpinnerScreen';\r\nimport './ChatListScreen.css';\r\n\r\nfunction ChatListScreen(props : any){\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n    const [userid, setUserid] = useState<number>();\r\n    const { listUser , listMessage } = props;\r\n    \r\n    const chatlistRef = useRef<HTMLInputElement>(null);\r\n\r\n    useEffect(() =>{\r\n        setTimeout(() => {\r\n            setUserid(2);\r\n            setIsLoading(false);\r\n        }, 2e3);\r\n\r\n    })\r\n\r\n    const findUserById  = (userid: number) :IUser =>{ \r\n        return listUser.find((user:IUser) =>user.id === userid) \r\n    };\r\n\r\n    useEffect(() =>{\r\n        if(chatlistRef.current){\r\n            chatlistRef.current.scrollTop = chatlistRef.current.scrollHeight;\r\n        }\r\n    })\r\n    \r\n    const showAllMessages = useCallback(() :any =>{\r\n        return listMessage.map((message:IMessage, index:number) =>{\r\n            const userTemp = findUserById(message.userid);\r\n            if(userTemp.id === userid){\r\n                return <CurrentChatScreen \r\n                key={ index }\r\n                user={ userTemp } \r\n                context={ message.context }\r\n                datetime={ message.datetime }\r\n                ></CurrentChatScreen>;\r\n            }\r\n            return <GuessChatScreen \r\n            key={ index }\r\n            user={ userTemp } \r\n            context={ message.context }\r\n            datetime={ message.datetime }\r\n            ></GuessChatScreen>;\r\n        })\r\n    },[listMessage , userid]);\r\n\r\n    return (\r\n        <div className=\"chatlist-container\" ref={ chatlistRef }>\r\n            {\r\n                isLoading ? (\r\n                    <div className=\"chatlist-loader\">\r\n                        <LoadingSpinnerScreen></LoadingSpinnerScreen>\r\n                    </div>\r\n                ) : (\r\n                    showAllMessages()\r\n                )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatListScreen;","D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\Conversion\\ChatList\\CurrentChat\\Views\\CurrentChatScreen.tsx",[],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\features\\ChatDetail\\Conversion\\ChatList\\GuessChat\\Views\\GuessChatScreen.tsx",[],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\libraries\\Features\\LoadingSpinner\\Views\\LoadingSpinnerScreen.tsx",[],"D:\\pohip2\\MyProject\\webchat_ihcm\\src\\libraries\\Features\\Popup\\Views\\PopupScreen.tsx",["126"],"import React , { useEffect , useRef , useState} from 'react';\r\nimport './PopupScreen.css';\r\n\r\nfunction PopupScreen(props : any){\r\n    const { coordPopup } = props;\r\n\r\n    function useOutsideAlerter(ref: any) {\r\n        useEffect(() => {\r\n          function handleClickOutside(event: any) {\r\n            if (ref.current && !ref.current.contains(event.target) && !props.hasPopup) {\r\n                props.togglePopup(ref);\r\n            }\r\n          }\r\n\r\n          // Bind the event listener\r\n          document.addEventListener(\"mousedown\", handleClickOutside);\r\n          return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n          };\r\n        }, [ref]);\r\n    }\r\n\r\n    const wrapperRef = useRef(null);\r\n    useOutsideAlerter(wrapperRef);\r\n\r\n    if(props.hasPopup){\r\n        return (\r\n            <div className=\"popup-container\" style={{\r\n                top:`${ coordPopup.y }px`,\r\n                left:`${ coordPopup.x }px`\r\n            }}\r\n            ref={wrapperRef}\r\n            >\r\n                Popup\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <div></div>;\r\n\r\n}\r\n\r\nexport default PopupScreen;",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"127","replacedBy":"131"},{"ruleId":"129","replacedBy":"132"},{"ruleId":"127","replacedBy":"133"},{"ruleId":"129","replacedBy":"134"},{"ruleId":"127","replacedBy":"135"},{"ruleId":"129","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":42,"column":13,"nodeType":"139","endLine":42,"endColumn":72},{"ruleId":"127","replacedBy":"140"},{"ruleId":"129","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":4,"column":10,"nodeType":"144","messageId":"145","endLine":4,"endColumn":13},{"ruleId":"137","severity":1,"message":"138","line":18,"column":29,"nodeType":"139","endLine":18,"endColumn":91},{"ruleId":"142","severity":1,"message":"146","line":1,"column":41,"nodeType":"144","messageId":"145","endLine":1,"endColumn":48},{"ruleId":"147","severity":1,"message":"148","line":51,"column":7,"nodeType":"149","endLine":51,"endColumn":29,"suggestions":"150"},{"ruleId":"142","severity":1,"message":"151","line":1,"column":39,"nodeType":"144","messageId":"145","endLine":1,"endColumn":47},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],["152"],["153"],["152"],["153"],["152"],["153"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["152"],["153"],"@typescript-eslint/no-unused-vars","'url' is defined but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'findUserById'. Either include it or remove the dependency array.","ArrayExpression",["154"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},"Update the dependencies array to be: [findUserById, listMessage, userid]",{"range":"157","text":"158"},[1849,1871],"[findUserById, listMessage, userid]"]