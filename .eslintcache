[{"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Reducers\\CurrentUser.reducer.ts":"1","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\ContextChat\\ImageChat\\Models\\ImageChat.ts":"2","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\Popup\\DetailPopup\\Views\\DetailPopupScreen.tsx":"3","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\DataNotFound\\Views\\DataNotFoundScreen.tsx":"4","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\Main\\Views\\UserChatListScreen.tsx":"5","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfNotFoundIcon.ts":"6","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\Header\\Views\\HeaderUserChatListScreen.tsx":"7","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Main\\Views\\ChatDetailScreen.tsx":"8","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\ImageOverlayFullScreen\\Views\\ImageOverlayScreen.tsx":"9","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\IconCirclePanel\\Views\\IconCirclePanelScreen.tsx":"10","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\ConversationDetail\\Main\\Views\\ConversationDetailScreen.tsx":"11","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\CustomButton\\Views\\CustomButtonScreen.tsx":"12","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\ContextChat\\GroupNotiChat\\Views\\GroupNotiChatScreen.tsx":"13","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Personal\\Conversation\\Views\\PersonalConversationScreen.tsx":"14","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\ToggleSwitch\\Views\\ToggleSwitchScreen.tsx":"15","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\App.tsx":"16","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\IconImage\\Views\\IconImageScreen.tsx":"17","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Actions\\CurrentUser.action.ts":"18","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Header\\Views\\HeaderNotificationListScreen.tsx":"19","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Main\\Views\\NotificationListScreen.tsx":"20","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\UserChat\\Views\\UserChatScreen.tsx":"21","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Noti\\Views\\NotificationScreen.tsx":"22","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\CircleAvatar\\Views\\CircleAvatarScreen.tsx":"23","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfGroupNotiChat.ts":"24","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfNotification.ts":"25","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Noti\\Models\\Notification.ts":"26","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\index.tsx":"27","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\Navbar\\Main\\Views\\NavbarScreen.tsx":"28","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\Main\\Views\\NavDetailScreen.tsx":"29","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\sampledatabase\\Group.database.ts":"30","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Personal\\Detail\\Views\\PersonalDetailScreen.tsx":"31","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\Main\\Views\\ChatListScreen.tsx":"32","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfMessage.ts":"33"},{"size":714,"mtime":1610072974204,"results":"34","hashOfConfig":"35"},{"size":258,"mtime":1610072974159,"results":"36","hashOfConfig":"35"},{"size":2051,"mtime":1610501418973,"results":"37","hashOfConfig":"35"},{"size":1326,"mtime":1610506185564,"results":"38","hashOfConfig":"35"},{"size":6896,"mtime":1610502626657,"results":"39","hashOfConfig":"35"},{"size":100,"mtime":1610502552056,"results":"40","hashOfConfig":"35"},{"size":812,"mtime":1610447581244,"results":"41","hashOfConfig":"35"},{"size":1852,"mtime":1610502776523,"results":"42","hashOfConfig":"35"},{"size":5554,"mtime":1610072974191,"results":"43","hashOfConfig":"35"},{"size":596,"mtime":1610072974188,"results":"44","hashOfConfig":"35"},{"size":754,"mtime":1610072974169,"results":"45","hashOfConfig":"35"},{"size":382,"mtime":1610072974186,"results":"46","hashOfConfig":"35"},{"size":1981,"mtime":1610362292754,"results":"47","hashOfConfig":"35"},{"size":17120,"mtime":1610503043235,"results":"48","hashOfConfig":"35"},{"size":335,"mtime":1610072974195,"results":"49","hashOfConfig":"35"},{"size":571,"mtime":1610440620627,"results":"50","hashOfConfig":"35"},{"size":390,"mtime":1610072974189,"results":"51","hashOfConfig":"35"},{"size":229,"mtime":1610072974202,"results":"52","hashOfConfig":"35"},{"size":2752,"mtime":1610503907891,"results":"53","hashOfConfig":"35"},{"size":2476,"mtime":1610522782426,"results":"54","hashOfConfig":"35"},{"size":2888,"mtime":1610508769615,"results":"55","hashOfConfig":"35"},{"size":3479,"mtime":1610525025954,"results":"56","hashOfConfig":"35"},{"size":1181,"mtime":1610509137052,"results":"57","hashOfConfig":"35"},{"size":108,"mtime":1610511624029,"results":"58","hashOfConfig":"35"},{"size":99,"mtime":1610511995811,"results":"59","hashOfConfig":"35"},{"size":759,"mtime":1610522136110,"results":"60","hashOfConfig":"35"},{"size":281,"mtime":1610072974182,"results":"61","hashOfConfig":"35"},{"size":2663,"mtime":1610447925134,"results":"62","hashOfConfig":"35"},{"size":943,"mtime":1610503610982,"results":"63","hashOfConfig":"35"},{"size":790,"mtime":1610072974206,"results":"64","hashOfConfig":"35"},{"size":9646,"mtime":1610072974176,"results":"65","hashOfConfig":"35"},{"size":8545,"mtime":1610436364246,"results":"66","hashOfConfig":"35"},{"size":92,"mtime":1610072974183,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1un77o0",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Reducers\\CurrentUser.reducer.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\ContextChat\\ImageChat\\Models\\ImageChat.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\Popup\\DetailPopup\\Views\\DetailPopupScreen.tsx",["138"],"import React from 'react';\r\nimport { ENUM_KIND_OF_MESSAGE } from '../../../../Constants/KindOfMessage';\r\nimport IconImageScreen from '../../../IconImage/Views/IconImageScreen';\r\nimport ModalScreen from '../../../Modal/Views/ModalScreen';\r\nimport './DetailPopupScreen.css';\r\n\r\nfunction DetailPopupScreen(props : any){\r\n    const { listEles , eleHeader } = props;\r\n    const showDetailPopup = () =>{\r\n        return listEles.map((ele:any , index:number) =>{\r\n            if(ele.eleContext){\r\n\r\n                return  <ModalScreen headerContent={ \"Cài đặt thông báo\" } context={ ele.eleContext } hasPadding={ true }>\r\n                            <li onClick={ ele.onClick }>\r\n                                <IconImageScreen src={ ele.icon } alt=\"replay\" class={\"\"}></IconImageScreen>\r\n                                <span className=\"app-mainfont\">\r\n                                    { ele.text }\r\n                                </span>           \r\n                            </li>\r\n                        </ModalScreen>\r\n            }\r\n            return (\r\n                <li onClick={ ele.onClick }>\r\n                    <IconImageScreen src={ ele.icon } alt=\"replay\" class={\"\"}></IconImageScreen>\r\n                    <span className=\"app-mainfont\">\r\n                        { ele.text }\r\n                    </span>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"detailpopup-container\">\r\n            {\r\n                eleHeader && eleHeader\r\n            }\r\n            <ul className=\"detailpopup-detail\">\r\n                {\r\n                    showDetailPopup()\r\n                }\r\n            </ul>\r\n\r\n                  {/* <ModalScreen headerContent={ \"Cài đặt thông báo\" } context={ eleContext } hasPadding={ true }>\r\n            <div>\r\n              <IconPanelScreen isActive={false} srcImg={ iconwhitenoti } contextToolTip={\"Thông báo\"}></IconPanelScreen>\r\n            </div>\r\n          </ModalScreen> */}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default DetailPopupScreen;",["139","140"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\DataNotFound\\Views\\DataNotFoundScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\Main\\Views\\UserChatListScreen.tsx",["141","142"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfNotFoundIcon.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\Header\\Views\\HeaderUserChatListScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Main\\Views\\ChatDetailScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\ImageOverlayFullScreen\\Views\\ImageOverlayScreen.tsx",["143"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\IconCirclePanel\\Views\\IconCirclePanelScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\ConversationDetail\\Main\\Views\\ConversationDetailScreen.tsx",["144"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\CustomButton\\Views\\CustomButtonScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\ContextChat\\GroupNotiChat\\Views\\GroupNotiChatScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Personal\\Conversation\\Views\\PersonalConversationScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\ToggleSwitch\\Views\\ToggleSwitchScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\App.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\IconImage\\Views\\IconImageScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Actions\\CurrentUser.action.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Header\\Views\\HeaderNotificationListScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Main\\Views\\NotificationListScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\UserChat\\Views\\UserChatScreen.tsx",["145"],"import React from \"react\";\r\nimport \"./UserChatScreen.css\";\r\nimport CircleAvatarScreen from \"../../../../../libraries/Features/CircleAvatar/Views/CircleAvatarScreen\";\r\nimport { IConversationState } from \"../../../../../redux/Reducers/ConversationList.reducer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CustomBadgeScreen from \"../../../../../libraries/Features/CustomBadge/Views/CustomBadgeScreen\";\r\nimport { useWindowSize } from \"../../../../../libraries/Hooks/useWindowSize\";\r\n\r\nconst iconunread = require(\"./Icons/iconunread.svg\").default;\r\n\r\nfunction UserChatScreen(props: IConversationState) {\r\n  const history = useHistory();\r\n  const [width, height] = useWindowSize();\r\n\r\n  const redirectToChatDetail = () => {\r\n    let kind = \"personal\";\r\n    if (props.isGroup) {\r\n      kind = \"group\";\r\n    }\r\n    history.push(`/${kind}/${props.id}`);\r\n\r\n    props.setIsActive(props.isGroup, props.id);\r\n  };\r\n\r\n  const renderUserImage = () => {\r\n    let widthAva=\"48px\";\r\n    let heightAva=\"48px\";\r\n    if (width < 768) {\r\n      widthAva=\"40px\";\r\n      heightAva=\"40px\";\r\n    }\r\n    return (\r\n      <CircleAvatarScreen\r\n        class=\"\"\r\n        width={ widthAva }\r\n        height={ heightAva }\r\n        src={props.avatar}\r\n        alt=\"avatar\"\r\n        isOnline={props.isOnline}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.isActive\r\n          ? \"userchat-container userchat-container-active\"\r\n          : \"userchat-container\"\r\n      }\r\n      onClick={redirectToChatDetail}\r\n    >\r\n      <div className=\"userchat-image\">\r\n        {\r\n          renderUserImage()\r\n        }\r\n      </div>\r\n      <div className=\"userchat-context\">\r\n        <div className=\"userchat-context-top\">\r\n          <span\r\n            className={\r\n              props.hasReadLastMess\r\n                ? \"userchat-username app-mainfont\"\r\n                : \"userchat-username app-mainfont userchat-unreadcontext\"\r\n            }\r\n          >\r\n            {props.name}\r\n          </span>\r\n          {props.isGroup && (\r\n            <CustomBadgeScreen\r\n              text=\"Nhóm\"\r\n              class=\"userchat-groupchat\"\r\n            ></CustomBadgeScreen>\r\n          )}\r\n          <span className=\"userchat-timeoflastmess app-mainfont\">\r\n            {props.timeToReadLastMess}\r\n          </span>\r\n        </div>\r\n        {props.hasReadLastMess ? (\r\n          <div className=\"userchat-context-bottom\">\r\n            <h3 className=\"userchat-contextoflastmess\">{ props.lastMess }</h3>\r\n          </div>\r\n        ) : (\r\n          <div className=\"userchat-context-bottom\">\r\n            <h3 className=\"userchat-contextoflastmess userchat-unreadcontext\">\r\n              {props.lastMess}\r\n            </h3>\r\n            <img src={iconunread} className=\"userchat-icon-unread\" alt=\"\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserChatScreen;\r\n","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Noti\\Views\\NotificationScreen.tsx",["146"],"import React from 'react';\r\nimport { ENUM_KIND_OF_NOTIFICATION } from '../../../../../libraries/Constants/KindOfNotification';\r\nimport CircleAvatarScreen from '../../../../../libraries/Features/CircleAvatar/Views/CircleAvatarScreen';\r\nimport { decodeHTML } from '../../../../../libraries/Functions/DecodeHTML';\r\nimport { useWindowSize } from '../../../../../libraries/Hooks/useWindowSize';\r\nimport { getTimePeriod, INotification } from '../Models/Notification';\r\nimport './NotificationScreen.css';\r\n\r\nconst iconnotitag = require(\"./Icons/iconnotitag.svg\").default;\r\nconst iconnotikicked = require(\"./Icons/iconnotikicked.svg\").default;\r\nconst iconnotilike = require(\"./Icons/iconnotilike.svg\").default;\r\nconst iconnotireply = require(\"./Icons/iconnotireply.svg\").default;\r\n\r\nfunction NotificationScreen(props: INotification) {\r\n    const [width, height] = useWindowSize();\r\n\r\n    function context ():string{\r\n        switch (props.status) {\r\n            case ENUM_KIND_OF_NOTIFICATION.REPLY:\r\n                return \"đã trả lời bình luận của bạn trong &#8243; \" + props.context +\" &#8243;\";\r\n            case ENUM_KIND_OF_NOTIFICATION.KICKED:\r\n                return \"đã xóa bạn khỏi nhóm chat &#8243; \" + props.context +\" &#8243;\";\r\n            case ENUM_KIND_OF_NOTIFICATION.LIKE:\r\n                return \"đã tương tác bình luận của bạn \";\r\n            case ENUM_KIND_OF_NOTIFICATION.TAG:\r\n                return \"đã nhắc bạn trong một bình luận \";\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    const icon = () =>{\r\n        switch (props.status) {\r\n            case ENUM_KIND_OF_NOTIFICATION.REPLY:\r\n                return iconnotireply;\r\n            case ENUM_KIND_OF_NOTIFICATION.KICKED:\r\n                return iconnotikicked;\r\n            case ENUM_KIND_OF_NOTIFICATION.LIKE:\r\n                return iconnotilike\r\n            case ENUM_KIND_OF_NOTIFICATION.TAG:\r\n                return iconnotitag;\r\n        }\r\n    }\r\n\r\n    const renderUserImage = () => {\r\n        let widthAva=\"48px\";\r\n        let heightAva=\"48px\";\r\n        if (width < 768) {\r\n            widthAva=\"40px\";\r\n            heightAva=\"40px\";\r\n        }\r\n\r\n        return (\r\n            <CircleAvatarScreen\r\n              class=\"\"\r\n              width={ widthAva }\r\n              height={ heightAva }\r\n              src={ props.avatar }\r\n              alt=\"avatar\"\r\n              isOnline={ false }\r\n              notiIcon={ icon() }\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={\r\n            props.isActive\r\n                ? \"userchat-container userchat-container-active notification-container\"\r\n                : \"userchat-container notification-container\"\r\n            }\r\n        >\r\n            <div className=\"userchat-image\">\r\n            {\r\n                renderUserImage()\r\n            }\r\n            </div>\r\n            <div className=\"userchat-context app-mainfont\">\r\n                <div>\r\n                    <div className=\"notification-context\">\r\n                        <p>{ props.username }</p>\r\n                        {\" \"}\r\n                        <span>{ decodeHTML(context()) }</span>\r\n                    </div>\r\n                    <span className=\"notification-time\">\r\n                        { getTimePeriod(props.time) } \r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotificationScreen;\r\n\r\n\r\n","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\CircleAvatar\\Views\\CircleAvatarScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfGroupNotiChat.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfNotification.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Noti\\Models\\Notification.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\index.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\Navbar\\Main\\Views\\NavbarScreen.tsx",["147","148","149","150"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\Main\\Views\\NavDetailScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\sampledatabase\\Group.database.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Personal\\Detail\\Views\\PersonalDetailScreen.tsx",["151"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\Main\\Views\\ChatListScreen.tsx",["152","153","154","155"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfMessage.ts",[],{"ruleId":"156","severity":1,"message":"157","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":30},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"156","severity":1,"message":"164","line":82,"column":10,"nodeType":"158","messageId":"159","endLine":82,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":94,"column":5,"nodeType":"167","endLine":94,"endColumn":7,"suggestions":"168"},{"ruleId":"165","severity":1,"message":"169","line":38,"column":7,"nodeType":"167","endLine":38,"endColumn":9,"suggestions":"170"},{"ruleId":"156","severity":1,"message":"171","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":19},{"ruleId":"156","severity":1,"message":"172","line":13,"column":17,"nodeType":"158","messageId":"159","endLine":13,"endColumn":23},{"ruleId":"156","severity":1,"message":"172","line":15,"column":19,"nodeType":"158","messageId":"159","endLine":15,"endColumn":25},{"ruleId":"156","severity":1,"message":"173","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"174","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":19},{"ruleId":"156","severity":1,"message":"175","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":26},{"ruleId":"156","severity":1,"message":"176","line":11,"column":7,"nodeType":"158","messageId":"159","endLine":11,"endColumn":20},{"ruleId":"156","severity":1,"message":"171","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":19},{"ruleId":"156","severity":1,"message":"177","line":13,"column":8,"nodeType":"158","messageId":"159","endLine":13,"endColumn":26},{"ruleId":"156","severity":1,"message":"178","line":17,"column":20,"nodeType":"158","messageId":"159","endLine":17,"endColumn":29},{"ruleId":"156","severity":1,"message":"179","line":22,"column":12,"nodeType":"158","messageId":"159","endLine":22,"endColumn":17},{"ruleId":"165","severity":1,"message":"180","line":36,"column":10,"nodeType":"167","endLine":36,"endColumn":19,"suggestions":"181"},"@typescript-eslint/no-unused-vars","'ENUM_KIND_OF_MESSAGE' is defined but never used.","Identifier","unusedVar","no-native-reassign",["182"],"no-negated-in-lhs",["183"],"'query' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props' and 'setUserChatIsAcTiveByPath'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["184"],"React Hook useEffect has a missing dependency: 'mainMiniImage.index'. Either include it or remove the dependency array.",["185"],"'useParams' is defined but never used.","'height' is assigned a value but never used.","'useState' is defined but never used.","'ModalScreen' is defined but never used.","'ToggleSwitchScreen' is defined but never used.","'iconbrownnoti' is assigned a value but never used.","'DataNotFoundScreen' is defined but never used.","'setUserid' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.messageList'. Either include it or remove the dependency array.",["186"],"no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [props, setUserChatIsAcTiveByPath]",{"range":"193","text":"194"},"Update the dependencies array to be: [mainMiniImage.index]",{"range":"195","text":"196"},"Update the dependencies array to be: [pageNum, props.messageList]",{"range":"197","text":"198"},[3877,3879],"[props, setUserChatIsAcTiveByPath]",[1352,1354],"[mainMiniImage.index]",[1903,1912],"[pageNum, props.messageList]"]