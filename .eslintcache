[{"D:\\Coding\\Work\\ver7\\WebChat_iHCM\\src\\features\\UserChatList\\UserChat\\Views\\UserChatScreen.tsx":"1","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\store.ts":"2","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\Popup\\DetailPopup\\Views\\DetailPopupScreen.tsx":"3","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\UserChatList\\Main\\Views\\UserChatListScreen.tsx":"4","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\sampledatabase\\Conversion.database.ts":"5","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Types\\CurrentUser.type.ts":"6","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\NoChat\\Views\\NoChatScreen.tsx":"7","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\UserChatList\\UserChat\\Views\\UserChatScreen.tsx":"8","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Personal\\Conversation\\Views\\PersonalConversationScreen.tsx":"9","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Group\\AddMember\\Views\\AddMemberScreen.tsx":"10","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\ConversationDetail\\Body\\Views\\BodyConversationDetailScreen.tsx":"11","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\ContextChat\\ImageChat\\Models\\ImageChat.ts":"12","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Group\\Create\\Header\\Views\\HeaderCreateGroupScreen.tsx":"13","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\ConversationDetail\\Header\\Views\\HeaderConversationDetailScreen.tsx":"14","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\Main\\Views\\ConversationScreen.tsx":"15","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\Header\\Views\\HeaderConversationScreen.tsx":"16","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\CustomInput\\Views\\CustomInputScreen.tsx":"17","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatInput\\Main\\Views\\ChatInputScreen.tsx":"18","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Group\\Create\\Body\\Views\\BodyCreateGroupScreen.tsx":"19","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\containers\\Body\\Views\\BodyScreen.tsx":"20","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Group\\Conversation\\Views\\GroupConversationScreen.tsx":"21","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Hooks\\useWindowSize.ts":"22","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\UserChatList\\NoUserChatFound\\Views\\NoUserChatFound.tsx":"23","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\UserChatList\\Header\\Views\\HeaderScreen.tsx":"24","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\GuestChat\\Views\\GuestChatScreen.tsx":"25","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\Modal\\Views\\ModalScreen.tsx":"26","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Group\\Detail\\Views\\GroupDetailScreen.tsx":"27"},{"size":3722,"mtime":1610072506325,"results":"28","hashOfConfig":"29"},{"size":238,"mtime":1610072974205,"results":"30","hashOfConfig":"31"},{"size":1081,"mtime":1610072974194,"results":"32","hashOfConfig":"31"},{"size":6155,"mtime":1610074712873,"results":"33","hashOfConfig":"31"},{"size":369,"mtime":1610072974206,"results":"34","hashOfConfig":"31"},{"size":53,"mtime":1610072974205,"results":"35","hashOfConfig":"31"},{"size":410,"mtime":1610072974175,"results":"36","hashOfConfig":"31"},{"size":3722,"mtime":1610072974182,"results":"37","hashOfConfig":"31"},{"size":21010,"mtime":1610072974176,"results":"38","hashOfConfig":"31"},{"size":9224,"mtime":1610074680510,"results":"39","hashOfConfig":"31"},{"size":90400,"mtime":1610072974167,"results":"40","hashOfConfig":"31"},{"size":258,"mtime":1610072974159,"results":"41","hashOfConfig":"31"},{"size":3142,"mtime":1610078041332,"results":"42","hashOfConfig":"31"},{"size":2084,"mtime":1610073809527,"results":"43","hashOfConfig":"31"},{"size":1100,"mtime":1610073863081,"results":"44","hashOfConfig":"31"},{"size":1495,"mtime":1610073883537,"results":"45","hashOfConfig":"31"},{"size":1262,"mtime":1610074613130,"results":"46","hashOfConfig":"31"},{"size":5498,"mtime":1610074644605,"results":"47","hashOfConfig":"31"},{"size":9371,"mtime":1610080234312,"results":"48","hashOfConfig":"31"},{"size":1304,"mtime":1610091744131,"results":"49","hashOfConfig":"31"},{"size":12535,"mtime":1610072974170,"results":"50","hashOfConfig":"31"},{"size":461,"mtime":1610091280883,"results":"51","hashOfConfig":"31"},{"size":434,"mtime":1610072974181,"results":"52","hashOfConfig":"31"},{"size":773,"mtime":1610072974179,"results":"53","hashOfConfig":"31"},{"size":3361,"mtime":1610072974162,"results":"54","hashOfConfig":"31"},{"size":1096,"mtime":1610072974193,"results":"55","hashOfConfig":"31"},{"size":13364,"mtime":1610072974173,"results":"56","hashOfConfig":"31"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1yjzjyy",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1un77o0",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Coding\\Work\\ver7\\WebChat_iHCM\\src\\features\\UserChatList\\UserChat\\Views\\UserChatScreen.tsx",["114","115"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\store.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\Popup\\DetailPopup\\Views\\DetailPopupScreen.tsx",["116"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\UserChatList\\Main\\Views\\UserChatListScreen.tsx",["117","118"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\sampledatabase\\Conversion.database.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Types\\CurrentUser.type.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\NoChat\\Views\\NoChatScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\UserChatList\\UserChat\\Views\\UserChatScreen.tsx",["119","120"],"import React, { useState } from \"react\";\r\nimport \"./UserChatScreen.css\";\r\nimport { IUserChat } from \"../Models/UserChatModel\";\r\nimport CircleAvatarScreen from \"../../../../libraries/Features/CircleAvatar/Views/CircleAvatarScreen\";\r\nimport { IConversationState } from \"../../../../redux/Reducers/ConversationList.reducer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CustomBadgeScreen from \"../../../../libraries/Features/CustomBadge/Views/CustomBadgeScreen\";\r\nimport { useLayoutEffect } from \"react\";\r\n\r\n// const iconuseronline = require('./Icons/iconuseronline.svg').default;\r\nconst iconunread = require(\"./Icons/iconunread.svg\").default;\r\n\r\nfunction UserChatScreen(props: IConversationState) {\r\n  const history = useHistory();\r\n  const [width, height] = useWindowSize();\r\n\r\n  const redirectToChatDetail = () => {\r\n    let kind = \"personal\";\r\n    if (props.isGroup) {\r\n      kind = \"group\";\r\n    }\r\n    history.push(`/${kind}/${props.id}`);\r\n\r\n    props.setIsActive(props.isGroup, props.id);\r\n  };\r\n\r\n  const renderUserImage = () => {\r\n    if (width < 768) {\r\n      return (\r\n        <CircleAvatarScreen\r\n          class=\"\"\r\n          width=\"40px\"\r\n          height=\"40px\"\r\n          src={props.avatar}\r\n          alt=\"avatar\"\r\n          isOnline={props.isOnline}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <CircleAvatarScreen\r\n          class=\"\"\r\n          width=\"48px\"\r\n          height=\"48px\"\r\n          src={props.avatar}\r\n          alt=\"avatar\"\r\n          isOnline={props.isOnline}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.isActive\r\n          ? \"userchat-container userchat-container-active\"\r\n          : \"userchat-container\"\r\n      }\r\n      onClick={redirectToChatDetail}\r\n    >\r\n      <div className=\"userchat-image\">\r\n        {/* <CircleAvatarScreen \r\n          class=\"\"\r\n          width=\"48px\"\r\n          height=\"48px\"\r\n          src={ props.avatar }\r\n          alt=\"avatar\"\r\n          isOnline={ props.isOnline }\r\n        ></CircleAvatarScreen> */}\r\n        {renderUserImage()}\r\n      </div>\r\n      <div className=\"userchat-context\">\r\n        <div className=\"userchat-context-top\">\r\n          <span\r\n            className={\r\n              props.hasReadLastMess\r\n                ? \"userchat-username app-mainfont\"\r\n                : \"userchat-username app-mainfont userchat-unreadcontext\"\r\n            }\r\n          >\r\n            {props.name}\r\n          </span>\r\n          {props.isGroup && (\r\n            <CustomBadgeScreen\r\n              text=\"Nhóm\"\r\n              class=\"userchat-groupchat\"\r\n            ></CustomBadgeScreen>\r\n          )}\r\n          <span className=\"userchat-timeoflastmess app-mainfont\">\r\n            {props.timeToReadLastMess}\r\n          </span>\r\n        </div>\r\n        {props.hasReadLastMess ? (\r\n          <div className=\"userchat-context-bottom\">\r\n            <h3 className=\"userchat-contextoflastmess\">{props.lastMess}</h3>\r\n          </div>\r\n        ) : (\r\n          <div className=\"userchat-context-bottom\">\r\n            <h3 className=\"userchat-contextoflastmess userchat-unreadcontext\">\r\n              {props.lastMess}\r\n            </h3>\r\n            <img src={iconunread} className=\"userchat-icon-unread\" alt=\"\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// resize screen\r\nfunction useWindowSize() {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n  return size;\r\n}\r\n\r\nexport default UserChatScreen;\r\n",["121","122"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Personal\\Conversation\\Views\\PersonalConversationScreen.tsx",["123","124","125"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Group\\AddMember\\Views\\AddMemberScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\ConversationDetail\\Body\\Views\\BodyConversationDetailScreen.tsx",["126","127","128"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\ContextChat\\ImageChat\\Models\\ImageChat.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Group\\Create\\Header\\Views\\HeaderCreateGroupScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\ConversationDetail\\Header\\Views\\HeaderConversationDetailScreen.tsx",["129"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\Main\\Views\\ConversationScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\Header\\Views\\HeaderConversationScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\CustomInput\\Views\\CustomInputScreen.tsx",["130"],"import React, { ChangeEvent } from 'react';\r\nimport { useRef } from 'react';\r\nimport { useState } from 'react';\r\nimport { ICustomInput } from '../Models/CustomInput';\r\nimport './CustomInputScreen.css';\r\n\r\nfunction CustomInputScreen(props : ICustomInput) {\r\n  const [value , setValue] = useState(\"\");\r\n  const textAreaRef = useRef<HTMLTextAreaElement >(null);\r\n\r\n  const changeValue = (e: any) =>{\r\n    const value = e.target.value;\r\n    setValue(value);\r\n    if(props.isMultiline){\r\n      const lineNum = e.target.value.split(\"\\n\").length;\r\n      if(textAreaRef.current){\r\n        if(lineNum > 1){\r\n          textAreaRef.current.rows = 3;\r\n          props.setIsMultiline(true);\r\n        } else{\r\n          textAreaRef.current.rows = 1;\r\n          props.setIsMultiline(false);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className={ \"custominput-container \" + props.class}>\r\n      {\r\n        props.isTextArea ?\r\n        <input type=\"text\" multiple={true} placeholder={ props.placeHolder } style={ props.style }/> :\r\n        <textarea placeholder={ props.placeHolder } style={ props.style } ref={textAreaRef} rows={1} onChange={ (e: ChangeEvent<Element>) => changeValue(e)}></textarea>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomInputScreen;\r\n","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatInput\\Main\\Views\\ChatInputScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Group\\Create\\Body\\Views\\BodyCreateGroupScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\containers\\Body\\Views\\BodyScreen.tsx",["131"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Group\\Conversation\\Views\\GroupConversationScreen.tsx",["132","133","134"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Hooks\\useWindowSize.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\UserChatList\\NoUserChatFound\\Views\\NoUserChatFound.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\UserChatList\\Header\\Views\\HeaderScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\GuestChat\\Views\\GuestChatScreen.tsx",["135"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\Modal\\Views\\ModalScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Group\\Detail\\Views\\GroupDetailScreen.tsx",["136"],{"ruleId":"137","severity":1,"message":"138","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":19},{"ruleId":"137","severity":1,"message":"141","line":15,"column":17,"nodeType":"139","messageId":"140","endLine":15,"endColumn":23},{"ruleId":"137","severity":1,"message":"142","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":30},{"ruleId":"137","severity":1,"message":"138","line":6,"column":10,"nodeType":"139","messageId":"140","endLine":6,"endColumn":19},{"ruleId":"143","severity":1,"message":"144","line":103,"column":6,"nodeType":"145","endLine":103,"endColumn":8,"suggestions":"146"},{"ruleId":"137","severity":1,"message":"138","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":19},{"ruleId":"137","severity":1,"message":"141","line":15,"column":17,"nodeType":"139","messageId":"140","endLine":15,"endColumn":23},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"137","severity":1,"message":"151","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},{"ruleId":"137","severity":1,"message":"152","line":1,"column":28,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},{"ruleId":"137","severity":1,"message":"153","line":17,"column":7,"nodeType":"139","messageId":"140","endLine":17,"endColumn":35},{"ruleId":"137","severity":1,"message":"152","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"142","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":30},{"ruleId":"137","severity":1,"message":"154","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":22},{"ruleId":"137","severity":1,"message":"155","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":23},{"ruleId":"137","severity":1,"message":"156","line":8,"column":10,"nodeType":"139","messageId":"140","endLine":8,"endColumn":15},{"ruleId":"137","severity":1,"message":"157","line":13,"column":10,"nodeType":"139","messageId":"140","endLine":13,"endColumn":15},{"ruleId":"137","severity":1,"message":"151","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},{"ruleId":"137","severity":1,"message":"152","line":1,"column":28,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},{"ruleId":"137","severity":1,"message":"158","line":7,"column":10,"nodeType":"139","messageId":"140","endLine":7,"endColumn":23},{"ruleId":"137","severity":1,"message":"159","line":11,"column":22,"nodeType":"139","messageId":"140","endLine":11,"endColumn":31},{"ruleId":"137","severity":1,"message":"159","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":19},"@typescript-eslint/no-unused-vars","'IUserChat' is defined but never used.","Identifier","unusedVar","'height' is assigned a value but never used.","'ENUM_KIND_OF_MESSAGE' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history.location.pathname' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["160"],"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'coversionList' is assigned a value but never used.","'FileChatScreen' is defined but never used.","'IconCirclePanel' is defined but never used.","'value' is assigned a value but never used.","'width' is assigned a value but never used.","'IConversation' is defined but never used.","'useParams' is defined but never used.",{"desc":"163","fix":"164"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [history.location.pathname, props]",{"range":"165","text":"166"},[4126,4128],"[history.location.pathname, props]"]