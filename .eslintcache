[{"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Reducers\\CurrentUser.reducer.ts":"1","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\ContextChat\\ImageChat\\Models\\ImageChat.ts":"2","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\Popup\\DetailPopup\\Views\\DetailPopupScreen.tsx":"3","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\DataNotFound\\Views\\DataNotFoundScreen.tsx":"4","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\Main\\Views\\UserChatListScreen.tsx":"5","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfNotFoundIcon.ts":"6","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\Header\\Views\\HeaderUserChatListScreen.tsx":"7","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Main\\Views\\ChatDetailScreen.tsx":"8","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\ImageOverlayFullScreen\\Views\\ImageOverlayScreen.tsx":"9","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\IconCirclePanel\\Views\\IconCirclePanelScreen.tsx":"10","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\ConversationDetail\\Main\\Views\\ConversationDetailScreen.tsx":"11","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\CustomButton\\Views\\CustomButtonScreen.tsx":"12","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\ContextChat\\GroupNotiChat\\Views\\GroupNotiChatScreen.tsx":"13","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Personal\\Conversation\\Views\\PersonalConversationScreen.tsx":"14","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\ToggleSwitch\\Views\\ToggleSwitchScreen.tsx":"15","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\App.tsx":"16","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\IconImage\\Views\\IconImageScreen.tsx":"17","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Actions\\CurrentUser.action.ts":"18","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Header\\Views\\HeaderNotificationListScreen.tsx":"19","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Main\\Views\\NotificationListScreen.tsx":"20","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\UserChat\\Views\\UserChatScreen.tsx":"21","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Noti\\Views\\NotificationScreen.tsx":"22","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\CircleAvatar\\Views\\CircleAvatarScreen.tsx":"23","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfGroupNotiChat.ts":"24","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfNotification.ts":"25","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Noti\\Models\\Notification.ts":"26","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\index.tsx":"27","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\Navbar\\Main\\Views\\NavbarScreen.tsx":"28","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\Main\\Views\\NavDetailScreen.tsx":"29","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\sampledatabase\\Group.database.ts":"30","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Personal\\Detail\\Views\\PersonalDetailScreen.tsx":"31","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\Main\\Views\\ChatListScreen.tsx":"32","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfMessage.ts":"33","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\FriendList\\Main\\Views\\FriendListScreen.tsx":"34","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\FriendList\\Friend\\Views\\FriendScreen.tsx":"35","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\SkeletonNavbarDetail\\Views\\LoadingSkeletons.tsx":"36","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\SkeletonNavbarDetail\\Views\\SkeletonNavbarDetailScreen.tsx":"37","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Types\\CurrentUser.type.ts":"38","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\sampledatabase\\Conversion.database.ts":"39","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Reducers\\ResponseMess.reducer.ts":"40","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\Popup\\MainPopup\\Views\\MainPopupScreen.tsx":"41","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Hooks\\useWindowSize.ts":"42","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\Navbar\\IconPanel\\Views\\IconPanelScreen.tsx":"43","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\Header\\Views\\HeaderConversationScreen.tsx":"44","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\containers\\Header\\Views\\HeaderScreen.tsx":"45"},{"size":714,"mtime":1610072974204,"results":"46","hashOfConfig":"47"},{"size":258,"mtime":1610072974159,"results":"48","hashOfConfig":"47"},{"size":2051,"mtime":1610501418973,"results":"49","hashOfConfig":"47"},{"size":1326,"mtime":1610506185564,"results":"50","hashOfConfig":"47"},{"size":6902,"mtime":1610599508010,"results":"51","hashOfConfig":"47"},{"size":100,"mtime":1610502552056,"results":"52","hashOfConfig":"47"},{"size":812,"mtime":1610447581244,"results":"53","hashOfConfig":"47"},{"size":1852,"mtime":1610502776523,"results":"54","hashOfConfig":"47"},{"size":5554,"mtime":1610072974191,"results":"55","hashOfConfig":"47"},{"size":596,"mtime":1610072974188,"results":"56","hashOfConfig":"47"},{"size":754,"mtime":1610072974169,"results":"57","hashOfConfig":"47"},{"size":382,"mtime":1610072974186,"results":"58","hashOfConfig":"47"},{"size":1981,"mtime":1610362292754,"results":"59","hashOfConfig":"47"},{"size":17120,"mtime":1610503043235,"results":"60","hashOfConfig":"47"},{"size":335,"mtime":1610072974195,"results":"61","hashOfConfig":"47"},{"size":1469,"mtime":1610599953412,"results":"62","hashOfConfig":"47"},{"size":390,"mtime":1610072974189,"results":"63","hashOfConfig":"47"},{"size":229,"mtime":1610072974202,"results":"64","hashOfConfig":"47"},{"size":2752,"mtime":1610503907891,"results":"65","hashOfConfig":"47"},{"size":2476,"mtime":1610522782426,"results":"66","hashOfConfig":"47"},{"size":2888,"mtime":1610508769615,"results":"67","hashOfConfig":"47"},{"size":3479,"mtime":1610525533466,"results":"68","hashOfConfig":"47"},{"size":1181,"mtime":1610509137052,"results":"69","hashOfConfig":"47"},{"size":108,"mtime":1610511624029,"results":"70","hashOfConfig":"47"},{"size":99,"mtime":1610511995811,"results":"71","hashOfConfig":"47"},{"size":759,"mtime":1610522136110,"results":"72","hashOfConfig":"47"},{"size":281,"mtime":1610072974182,"results":"73","hashOfConfig":"47"},{"size":2663,"mtime":1610447925134,"results":"74","hashOfConfig":"47"},{"size":942,"mtime":1610525758182,"results":"75","hashOfConfig":"47"},{"size":790,"mtime":1610072974206,"results":"76","hashOfConfig":"47"},{"size":9646,"mtime":1610072974176,"results":"77","hashOfConfig":"47"},{"size":8571,"mtime":1610590595324,"results":"78","hashOfConfig":"47"},{"size":92,"mtime":1610072974183,"results":"79","hashOfConfig":"47"},{"size":10698,"mtime":1610599503217,"results":"80","hashOfConfig":"47"},{"size":1700,"mtime":1610527458595,"results":"81","hashOfConfig":"47"},{"size":829,"mtime":1610531576357,"results":"82","hashOfConfig":"47"},{"size":1406,"mtime":1610598823183,"results":"83","hashOfConfig":"47"},{"size":53,"mtime":1610072974205,"results":"84","hashOfConfig":"47"},{"size":369,"mtime":1610072974206,"results":"85","hashOfConfig":"47"},{"size":884,"mtime":1610072974204,"results":"86","hashOfConfig":"47"},{"size":1002,"mtime":1610072974195,"results":"87","hashOfConfig":"47"},{"size":441,"mtime":1610094168719,"results":"88","hashOfConfig":"47"},{"size":880,"mtime":1610599937309,"results":"89","hashOfConfig":"47"},{"size":3063,"mtime":1610599962777,"results":"90","hashOfConfig":"47"},{"size":3343,"mtime":1610352280147,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1un77o0",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"133"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Reducers\\CurrentUser.reducer.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\ContextChat\\ImageChat\\Models\\ImageChat.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\Popup\\DetailPopup\\Views\\DetailPopupScreen.tsx",["192"],"import React from 'react';\r\nimport { ENUM_KIND_OF_MESSAGE } from '../../../../Constants/KindOfMessage';\r\nimport IconImageScreen from '../../../IconImage/Views/IconImageScreen';\r\nimport ModalScreen from '../../../Modal/Views/ModalScreen';\r\nimport './DetailPopupScreen.css';\r\n\r\nfunction DetailPopupScreen(props : any){\r\n    const { listEles , eleHeader } = props;\r\n    const showDetailPopup = () =>{\r\n        return listEles.map((ele:any , index:number) =>{\r\n            if(ele.eleContext){\r\n\r\n                return  <ModalScreen headerContent={ \"Cài đặt thông báo\" } context={ ele.eleContext } hasPadding={ true }>\r\n                            <li onClick={ ele.onClick }>\r\n                                <IconImageScreen src={ ele.icon } alt=\"replay\" class={\"\"}></IconImageScreen>\r\n                                <span className=\"app-mainfont\">\r\n                                    { ele.text }\r\n                                </span>           \r\n                            </li>\r\n                        </ModalScreen>\r\n            }\r\n            return (\r\n                <li onClick={ ele.onClick }>\r\n                    <IconImageScreen src={ ele.icon } alt=\"replay\" class={\"\"}></IconImageScreen>\r\n                    <span className=\"app-mainfont\">\r\n                        { ele.text }\r\n                    </span>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"detailpopup-container\">\r\n            {\r\n                eleHeader && eleHeader\r\n            }\r\n            <ul className=\"detailpopup-detail\">\r\n                {\r\n                    showDetailPopup()\r\n                }\r\n            </ul>\r\n\r\n                  {/* <ModalScreen headerContent={ \"Cài đặt thông báo\" } context={ eleContext } hasPadding={ true }>\r\n            <div>\r\n              <IconPanelScreen isActive={false} srcImg={ iconwhitenoti } contextToolTip={\"Thông báo\"}></IconPanelScreen>\r\n            </div>\r\n          </ModalScreen> */}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default DetailPopupScreen;",["193","194"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\DataNotFound\\Views\\DataNotFoundScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\Main\\Views\\UserChatListScreen.tsx",["195","196"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfNotFoundIcon.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\Header\\Views\\HeaderUserChatListScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Main\\Views\\ChatDetailScreen.tsx",[],["197","198"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\ImageOverlayFullScreen\\Views\\ImageOverlayScreen.tsx",["199"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\IconCirclePanel\\Views\\IconCirclePanelScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\ConversationDetail\\Main\\Views\\ConversationDetailScreen.tsx",["200"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\CustomButton\\Views\\CustomButtonScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\ContextChat\\GroupNotiChat\\Views\\GroupNotiChatScreen.tsx",[],["201","202"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Personal\\Conversation\\Views\\PersonalConversationScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\ToggleSwitch\\Views\\ToggleSwitchScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\App.tsx",["203","204","205","206"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\IconImage\\Views\\IconImageScreen.tsx",[],["207","208"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Actions\\CurrentUser.action.ts",[],["209","210"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Header\\Views\\HeaderNotificationListScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Main\\Views\\NotificationListScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\UserChatList\\UserChat\\Views\\UserChatScreen.tsx",["211"],"import React from \"react\";\r\nimport \"./UserChatScreen.css\";\r\nimport CircleAvatarScreen from \"../../../../../libraries/Features/CircleAvatar/Views/CircleAvatarScreen\";\r\nimport { IConversationState } from \"../../../../../redux/Reducers/ConversationList.reducer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CustomBadgeScreen from \"../../../../../libraries/Features/CustomBadge/Views/CustomBadgeScreen\";\r\nimport { useWindowSize } from \"../../../../../libraries/Hooks/useWindowSize\";\r\n\r\nconst iconunread = require(\"./Icons/iconunread.svg\").default;\r\n\r\nfunction UserChatScreen(props: IConversationState) {\r\n  const history = useHistory();\r\n  const [width, height] = useWindowSize();\r\n\r\n  const redirectToChatDetail = () => {\r\n    let kind = \"personal\";\r\n    if (props.isGroup) {\r\n      kind = \"group\";\r\n    }\r\n    history.push(`/${kind}/${props.id}`);\r\n\r\n    props.setIsActive(props.isGroup, props.id);\r\n  };\r\n\r\n  const renderUserImage = () => {\r\n    let widthAva=\"48px\";\r\n    let heightAva=\"48px\";\r\n    if (width < 768) {\r\n      widthAva=\"40px\";\r\n      heightAva=\"40px\";\r\n    }\r\n    return (\r\n      <CircleAvatarScreen\r\n        class=\"\"\r\n        width={ widthAva }\r\n        height={ heightAva }\r\n        src={props.avatar}\r\n        alt=\"avatar\"\r\n        isOnline={props.isOnline}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.isActive\r\n          ? \"userchat-container userchat-container-active\"\r\n          : \"userchat-container\"\r\n      }\r\n      onClick={redirectToChatDetail}\r\n    >\r\n      <div className=\"userchat-image\">\r\n        {\r\n          renderUserImage()\r\n        }\r\n      </div>\r\n      <div className=\"userchat-context\">\r\n        <div className=\"userchat-context-top\">\r\n          <span\r\n            className={\r\n              props.hasReadLastMess\r\n                ? \"userchat-username app-mainfont\"\r\n                : \"userchat-username app-mainfont userchat-unreadcontext\"\r\n            }\r\n          >\r\n            {props.name}\r\n          </span>\r\n          {props.isGroup && (\r\n            <CustomBadgeScreen\r\n              text=\"Nhóm\"\r\n              class=\"userchat-groupchat\"\r\n            ></CustomBadgeScreen>\r\n          )}\r\n          <span className=\"userchat-timeoflastmess app-mainfont\">\r\n            {props.timeToReadLastMess}\r\n          </span>\r\n        </div>\r\n        {props.hasReadLastMess ? (\r\n          <div className=\"userchat-context-bottom\">\r\n            <h3 className=\"userchat-contextoflastmess\">{ props.lastMess }</h3>\r\n          </div>\r\n        ) : (\r\n          <div className=\"userchat-context-bottom\">\r\n            <h3 className=\"userchat-contextoflastmess userchat-unreadcontext\">\r\n              {props.lastMess}\r\n            </h3>\r\n            <img src={iconunread} className=\"userchat-icon-unread\" alt=\"\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserChatScreen;\r\n","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Noti\\Views\\NotificationScreen.tsx",["212"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\CircleAvatar\\Views\\CircleAvatarScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfGroupNotiChat.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfNotification.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\NotiList\\Noti\\Models\\Notification.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\index.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\Navbar\\Main\\Views\\NavbarScreen.tsx",["213","214","215","216"],"import React, { useState } from 'react';\r\nimport { ENUM_KIND_OF_ICONPANEL } from '../../../../libraries/Constants/KindOfIconPanel';\r\nimport ModalScreen from '../../../../libraries/Features/Modal/Views/ModalScreen';\r\nimport ToggleSwitchScreen from '../../../../libraries/Features/ToggleSwitch/Views/ToggleSwitchScreen';\r\nimport IconPanelScreen from '../../IconPanel/Views/IconPanelScreen';\r\nimport './NavbarScreen.css';\r\n\r\nconst iconfriend = require('./Icons/iconfriend.svg').default;\r\nconst iconmessage = require('./Icons/iconmessage.svg').default;\r\nconst iconwhitenoti = require('./Icons/iconwhitenoti.svg').default;\r\nconst iconbrownnoti = require('../../../../libraries/Icons/iconbrownnoti.svg').default;\r\nconst iconquestion = require('../../../../libraries/Icons/iconquestion.svg').default;\r\n\r\nfunction NavbarScreen(props: any) {\r\n  const { activedIcon , setActivedIcon } = props;\r\n\r\n  // const eleContext = (\r\n  //   <div className=\"noti-context\">\r\n  //     <div className=\"brownnoti-container\">\r\n  //       <img src={ iconbrownnoti }  alt=\"\"></img>\r\n  //     </div>\r\n  //     <div className=\"app-mainfont\">\r\n  //       <h4>Thông báo</h4>\r\n  //       <span>Tất cả các thông báo</span>\r\n  //     </div>\r\n  //     <ToggleSwitchScreen></ToggleSwitchScreen>\r\n  //   </div>\r\n  // );\r\n\r\n  return (\r\n    <div className=\"navbar-container\">\r\n      <IconPanelScreen isActive={ activedIcon === ENUM_KIND_OF_ICONPANEL.MESSAGES } srcImg={ iconmessage } contextToolTip={\"Trò chuyện\"} onClick={ () =>{setActivedIcon(ENUM_KIND_OF_ICONPANEL.MESSAGES)} }></IconPanelScreen>\r\n      <IconPanelScreen isActive={ activedIcon === ENUM_KIND_OF_ICONPANEL.FRIENDS } srcImg={ iconfriend } contextToolTip={\"Bạn bè\"} onClick={ () =>{setActivedIcon(ENUM_KIND_OF_ICONPANEL.FRIENDS)} }></IconPanelScreen>\r\n      {/* <ModalScreen headerContent={ \"Cài đặt thông báo\" } context={ eleContext } hasPadding={ true }>\r\n            <div>\r\n              <IconPanelScreen isActive={false} srcImg={ iconwhitenoti } contextToolTip={\"Thông báo\"}></IconPanelScreen>\r\n            </div>\r\n          </ModalScreen> */}\r\n      <IconPanelScreen isActive={ activedIcon === ENUM_KIND_OF_ICONPANEL.NOTI } srcImg={ iconwhitenoti } contextToolTip={\"Thông báo\"} onClick={ () =>{setActivedIcon(ENUM_KIND_OF_ICONPANEL.NOTI)} }></IconPanelScreen> \r\n      <div className=\"navbar-iconpanel-last\">\r\n        <IconPanelScreen isActive={ activedIcon === ENUM_KIND_OF_ICONPANEL.QUESTIONS } srcImg={ iconquestion } contextToolTip={\"Giải đáp\"} onClick={ () =>{setActivedIcon(ENUM_KIND_OF_ICONPANEL.QUESTIONS)} }></IconPanelScreen>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavbarScreen;\r\n","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\Main\\Views\\NavDetailScreen.tsx",["217"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\sampledatabase\\Group.database.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Personal\\Detail\\Views\\PersonalDetailScreen.tsx",["218"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\ChatList\\Main\\Views\\ChatListScreen.tsx",["219","220","221","222"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Constants\\KindOfMessage.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\FriendList\\Main\\Views\\FriendListScreen.tsx",["223","224","225","226"],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\NavDetail\\FriendList\\Friend\\Views\\FriendScreen.tsx",["227"],"import React from \"react\";\r\nimport \"./FriendScreen.css\";\r\nimport CircleAvatarScreen from \"../../../../../libraries/Features/CircleAvatar/Views/CircleAvatarScreen\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useWindowSize } from \"../../../../../libraries/Hooks/useWindowSize\";\r\nimport { IFriend } from \"../Models/Friend\";\r\n\r\nfunction FriendScreen(props: IFriend) {\r\n  const history = useHistory();\r\n  const [width, height] = useWindowSize();\r\n\r\n  const redirectToChatDetail = () => {\r\n    let kind = \"personal\";\r\n    \r\n    history.push(`/${kind}/${props.id}`);\r\n  };\r\n\r\n  const renderUserImage = () => {\r\n    let widthAva=\"48px\";\r\n    let heightAva=\"48px\";\r\n    if (width < 768) {\r\n      widthAva=\"40px\";\r\n      heightAva=\"40px\";\r\n    }\r\n    return (\r\n      <CircleAvatarScreen\r\n        class=\"\"\r\n        width={ widthAva }\r\n        height={ heightAva }\r\n        src={props.avatar}\r\n        alt=\"avatar\"\r\n        isOnline={props.isOnline}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\"userchat-container\" }\r\n      onClick={redirectToChatDetail}\r\n    >\r\n      <div className=\"userchat-image\">\r\n        {\r\n          renderUserImage()\r\n        }\r\n      </div>\r\n      <div className=\"userchat-context\">\r\n        <div className=\"userchat-context-top\">\r\n          <span\r\n            className={ \"userchat-username app-mainfont userchat-unreadcontext\" }\r\n          >\r\n            {props.name}\r\n          </span>\r\n        </div>\r\n        <div className=\"userchat-context-bottom\">\r\n            <h3 className=\"userchat-contextoflastmess\">\r\n              {props.context}\r\n            </h3>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendScreen;\r\n","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\SkeletonNavbarDetail\\Views\\LoadingSkeletons.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\SkeletonNavbarDetail\\Views\\SkeletonNavbarDetailScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Types\\CurrentUser.type.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\sampledatabase\\Conversion.database.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\redux\\Reducers\\ResponseMess.reducer.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Features\\Popup\\MainPopup\\Views\\MainPopupScreen.tsx",["228"],"import React, { useRef , useEffect } from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport './MainPopupScreen.css';\r\n\r\nconst MainPopupScreen = (props: any) =>{ \r\n  const ref = useRef<any>(null);\r\n\r\n  // const closeTooltip = () => ref.current.close();\r\n\r\n  function ClosePopupWhenScroll(ref: any) {\r\n    useEffect(() => {\r\n      document.addEventListener(\"wheel\", () =>ref.current && ref.current.close());\r\n      return () => {\r\n        document.removeEventListener(\"wheel\", () =>ref.current && ref.current.close());\r\n      };\r\n    }, [ref]);\r\n  }\r\n\r\n  ClosePopupWhenScroll(ref);\r\n  \r\n  return (\r\n    <Popup\r\n      ref={ref}\r\n      trigger={\r\n        props.children\r\n      }\r\n      position={['bottom left', 'bottom center']}\r\n      closeOnDocumentClick={true}\r\n      arrow={false}\r\n      repositionOnResize={true}\r\n    >\r\n        <div className=\"mainpopup-container\">\r\n            {\r\n            props.context\r\n            }\r\n        </div>\r\n    </Popup>\r\n  );\r\n}\r\n\r\nexport default MainPopupScreen;","D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\libraries\\Hooks\\useWindowSize.ts",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\Navbar\\IconPanel\\Views\\IconPanelScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\features\\ChatDetail\\Conversation\\Header\\Views\\HeaderConversationScreen.tsx",[],"D:\\Coding\\Work\\ver8\\WebChat_iHCM\\src\\containers\\Header\\Views\\HeaderScreen.tsx",["229"],{"ruleId":"230","severity":1,"message":"231","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":30},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"230","severity":1,"message":"238","line":82,"column":10,"nodeType":"232","messageId":"233","endLine":82,"endColumn":15},{"ruleId":"239","severity":1,"message":"240","line":94,"column":5,"nodeType":"241","endLine":94,"endColumn":7,"suggestions":"242"},{"ruleId":"234","replacedBy":"243"},{"ruleId":"236","replacedBy":"244"},{"ruleId":"239","severity":1,"message":"245","line":38,"column":7,"nodeType":"241","endLine":38,"endColumn":9,"suggestions":"246"},{"ruleId":"230","severity":1,"message":"247","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":19},{"ruleId":"234","replacedBy":"248"},{"ruleId":"236","replacedBy":"249"},{"ruleId":"230","severity":1,"message":"250","line":5,"column":19,"nodeType":"232","messageId":"233","endLine":5,"endColumn":32},{"ruleId":"230","severity":1,"message":"251","line":5,"column":34,"nodeType":"232","messageId":"233","endLine":5,"endColumn":40},{"ruleId":"230","severity":1,"message":"252","line":5,"column":42,"nodeType":"232","messageId":"233","endLine":5,"endColumn":46},{"ruleId":"230","severity":1,"message":"253","line":5,"column":48,"nodeType":"232","messageId":"233","endLine":5,"endColumn":60},{"ruleId":"234","replacedBy":"254"},{"ruleId":"236","replacedBy":"255"},{"ruleId":"234","replacedBy":"256"},{"ruleId":"236","replacedBy":"257"},{"ruleId":"230","severity":1,"message":"258","line":13,"column":17,"nodeType":"232","messageId":"233","endLine":13,"endColumn":23},{"ruleId":"230","severity":1,"message":"258","line":15,"column":19,"nodeType":"232","messageId":"233","endLine":15,"endColumn":25},{"ruleId":"230","severity":1,"message":"259","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"230","severity":1,"message":"260","line":3,"column":8,"nodeType":"232","messageId":"233","endLine":3,"endColumn":19},{"ruleId":"230","severity":1,"message":"261","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":26},{"ruleId":"230","severity":1,"message":"262","line":11,"column":7,"nodeType":"232","messageId":"233","endLine":11,"endColumn":20},{"ruleId":null,"fatal":true,"severity":2,"message":"263","line":17,"column":33},{"ruleId":"230","severity":1,"message":"247","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":19},{"ruleId":"230","severity":1,"message":"264","line":13,"column":8,"nodeType":"232","messageId":"233","endLine":13,"endColumn":26},{"ruleId":"230","severity":1,"message":"265","line":17,"column":20,"nodeType":"232","messageId":"233","endLine":17,"endColumn":29},{"ruleId":"230","severity":1,"message":"266","line":22,"column":12,"nodeType":"232","messageId":"233","endLine":22,"endColumn":17},{"ruleId":"239","severity":1,"message":"267","line":36,"column":10,"nodeType":"241","endLine":36,"endColumn":19,"suggestions":"268"},{"ruleId":"230","severity":1,"message":"269","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":35},{"ruleId":"230","severity":1,"message":"264","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":26},{"ruleId":"230","severity":1,"message":"238","line":257,"column":12,"nodeType":"232","messageId":"233","endLine":257,"endColumn":17},{"ruleId":"230","severity":1,"message":"270","line":258,"column":12,"nodeType":"232","messageId":"233","endLine":258,"endColumn":23},{"ruleId":"230","severity":1,"message":"258","line":10,"column":17,"nodeType":"232","messageId":"233","endLine":10,"endColumn":23},{"ruleId":"239","severity":1,"message":"271","line":14,"column":71,"nodeType":"232","endLine":14,"endColumn":78},{"ruleId":"239","severity":1,"message":"272","line":26,"column":6,"nodeType":"241","endLine":26,"endColumn":8,"suggestions":"273"},"@typescript-eslint/no-unused-vars","'ENUM_KIND_OF_MESSAGE' is defined but never used.","Identifier","unusedVar","no-native-reassign",["274"],"no-negated-in-lhs",["275"],"'query' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props' and 'setUserChatIsAcTiveByPath'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["276"],["274"],["275"],"React Hook useEffect has a missing dependency: 'mainMiniImage.index'. Either include it or remove the dependency array.",["277"],"'useParams' is defined but never used.",["274"],["275"],"'CallBackProps' is defined but never used.","'STATUS' is defined but never used.","'Step' is defined but never used.","'StoreHelpers' is defined but never used.",["274"],["275"],["274"],["275"],"'height' is assigned a value but never used.","'useState' is defined but never used.","'ModalScreen' is defined but never used.","'ToggleSwitchScreen' is defined but never used.","'iconbrownnoti' is assigned a value but never used.","Parsing error: Identifier expected.","'DataNotFoundScreen' is defined but never used.","'setUserid' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.messageList'. Either include it or remove the dependency array.",["278"],"'ENUM_KIND_OF_NOTFOUNDICON' is defined but never used.","'hasSkeleton' is assigned a value but never used.","The ref value 'ref.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'ref.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["279"],"no-global-assign","no-unsafe-negation",{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},"Update the dependencies array to be: [props, setUserChatIsAcTiveByPath]",{"range":"288","text":"289"},"Update the dependencies array to be: [mainMiniImage.index]",{"range":"290","text":"291"},"Update the dependencies array to be: [pageNum, props.messageList]",{"range":"292","text":"293"},"Update the dependencies array to be: [props]",{"range":"294","text":"295"},[3877,3879],"[props, setUserChatIsAcTiveByPath]",[1352,1354],"[mainMiniImage.index]",[1903,1912],"[pageNum, props.messageList]",[1144,1146],"[props]"]